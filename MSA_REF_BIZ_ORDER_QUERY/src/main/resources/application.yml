server:
  port: 8082

spring:
  application:
    name: MSA_REF_BIZ_ORDER_QUERY
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  data:
    mongodb:
      host: localhost
      port: 27017
      database: MSA_READ_DB

# Kafka Configuration
  kafka:
    topic: msa-topic
    listener:
      ack-mode: MANUAL_IMMEDIATE
      poll-timeout: 90000
    bootstrap-servers: localhost:9092
    consumer:
      group-id: msa-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      isolation-level: READ_COMMITTED
      properties:
        spring:
          json:
            trusted:
              packages: '*'


logging:
  config: classpath:log4j2.xml

spring-doc:
  packages-to-scan: com.samsungsds
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    try-it-out-enabled: false
    filter: false
    syntax-highlight:
      activated: true
    operations-sorter: method
    tags-sorter: alpha
  api-docs:
    path: /api-docs
    groups:
      enabled: true
  cache:
    disabled: true
  default-consumes-media-type: application/json:charset=UTF-8

# Message read used property file
# GlobalHandlerException Message
exception1:
  error:
    msg: Failed to complete order request - {0}

# OrderQueryController Message
noData:
  found:
    msg: No Order data found!
data:
  found:
    msg: Successfully returned {0} order(s)!
id:
  notFound:
    msg: No order data found for id - {0}
origin:
  notFound:
    msg: No order data found for origin - {0}

# OrderQueryDispatcher Message
notFound:
  queryHandler:
    msg: No Query handler register!
multiple:
  queryHandler:
    msg: Multiple Query handlers defined for a query!

# OrderEventConsumer Message
consume:
  kafka:
    msg: Getting an event from Kafka -> %s
error:
  kafka:
    msg: Error while consuming the event

